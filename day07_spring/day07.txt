검색 처리
 - 단일 항목 검색
	제목/내용/작성자

 - 다중 항목 검색
	제목 and 내용, 제목 and 작성자, 내용 그리고 작성자, 제목 and 내용 and 작성자
--------------------------------------------------------------------------
MyBatis의 동적 태그들
	if
	choose(when, otherwise)
	where
	trim
	foreach

[if]
	검색 조건이 'T' : 제목이 키워드인 항목을 검색
	<if test="type == 'T'.toString()">
		title like '%' || #{keyword} || '%'
	</if>

[choose]
	<choose>
		<when test="type == 'T'.toString()">
			title like '%' || #{keyword} || '%'
		</when>
		<otherwise>
			title like '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%'
		</otherwise>
	</choose>

[where]
	select * from tbl_board
	<where>
		<if test="bno != null">
			bno = #{bno}
		</if>
	</where>

[trim]
	select * from tbl_board
	<where>
		<if test="bno != null">
			bno = #{bno}
		</if>
		<trim prefixOverrides = "and">
			rownum = 1
		</trim>
	</where>

[foreach]
	List, 배열 등을 이용해서 루프를 처리한다.

	DAO.java
	boardMapper(DTO);

	DTO.java
	public Map<String, String> getSearchMap(){
		Map<String, String> searchMap = new HashMap<>();
		map.put("T", "안녕");
		map.put("C", "안녕");
		return searchMap;
	}

	.xml
	select * from tbl_board
	<trim prefix="WHERE(" suffix=")" prefixOverrides="OR">
		<foreach item="value" index="key" collection="searchMap">
			<trim prefix="OR">
				<choose>
				<when test="key == 'T'.toString()">
					title = #{value}
				</when>
				<when test="key == 'C'.toString()">
					content = #{value}
				</when>
				<when test="key == 'W'.toString()">
					writer = #{value}
				</when>
				</choose>
			</trim>
		</foreach>
	</trim>











